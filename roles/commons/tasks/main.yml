---

- name: Dump all vars
  action: template src=dumpall.j2 dest=/var/log/vars-{{hostname_fqdn}}.log
  tags: debug

- name: Set local timezone
  timezone: name={{timezone}}
  when: ansible_virtualization_type != "docker"
  notify: update tzdata
  tags: config
  
- name: set hostname
  hostname: name="{{hostname_fqdn}}"
  when: ansible_virtualization_type != "docker"
  tags: config
  
- name: put hostname to /etc/hosts
  copy: content="127.0.1.1 {{hostname_fqdn}} localhost" dest=/etc/hosts backup=no
  when: ansible_virtualization_type != "docker"
  tags: config

- name: apt-get update
  apt: update_cache=yes
  tags: install
  
- name: apt-get dist-upgrade
  apt: upgrade=dist force=yes install_recommends=no
  tags: install

- name: Install required
  apt: name={{ item }} state=latest install_recommends=no
  with_items:
    - openssl
    - apt-transport-https
    - ca-certificates
    - software-properties-common
    - language-pack-en
    - cron
    - gosu
    - curl
    - ufw
    - python3-pip
    - git
  tags: install
  
- name: localgen install
  locale_gen: name=en_US state=present  
  tags: install

- name: configure ovh failover interface
  template: src=templates/ovh-failover-interface.j2 dest=/etc/network/interfaces.d/ens3:0.cfg force=yes backup=yes
  when: failover_address is defined and ansible_virtualization_type != "docker"
  notify:
     - restart network
     - up failover interface
  tags: config

- name: remove package
  apt:
    name: apparmor
    state: absent
    purge: true
  tags: config
  
- name: cron is running and service enabled
  service: name=cron state=started enabled=yes
  when: not supervisor_enable and ansible_virtualization_type != "docker"
  tags: service

- name: cron is not running and service disabled
  service: name=cron state=stopped enabled=no
  when: supervisor_enable or ansible_virtualization_type == "docker"
  tags: service
      
  