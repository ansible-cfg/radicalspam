- name: supervisor install
  apt: name=supervisor state=latest install_recommends=no
  tags: install

- name: supervisor config
  template: src=templates/supervisord.conf.j2 dest=/etc/supervisor/supervisord.conf backup=yes
  when: supervisor_enable
  tags: config

- name: copy postfix script
  copy: src=postfix.sh dest=/usr/local/bin/postfix-start mode=0755
  when: supervisor_enable
  tags: config

- name: copy supervisor script
  copy: src=supervisor.sh dest=/usr/local/bin/supervisor-start mode=0755
  when: supervisor_enable
  tags: config
  
- name: supervisor start services script
  template: src=templates/start-services.sh.j2 dest=/usr/local/bin/start-services backup=yes mode=0755
  when: supervisor_enable
  tags: config
  
- name: supervisor is running and service enable
  service: name=supervisor state=started enabled=yes
  when: supervisor_enable and ansible_virtualization_type != "docker"
  tags: service

- name: supervisor is not running and service disabled
  service: name=supervisor state=stopped enabled=no
  when: not supervisor_enable
  tags: service
    
- name: reboot nodes
  shell: sleep 2 && shutdown -r now "Ansible reboot"
  async: 1
  poll: 0
  ignore_errors: true

#- name: wait for server to come back
#  local_action: wait_for
#  args:
#    host: "{{ inventory_hostname }}"
#    port: 22
#    state: started
#    delay: 30
#    timeout: 60
            
#- name: restart server
#  shell: /sbin/shutdown -r now
#  when: ansible_virtualization_type != "docker"
#  async: 0
#  poll: 0
#  tags: command

#- name: waiting for server to come back
#  local_action: wait_for host={{ ansible_ssh_host }} state=started

  